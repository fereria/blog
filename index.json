[{"title":"Advent Calendarハジマルヨー","date":"","description":"","body":"さて、狂気のAdvent Calendar Universal Scene Description 1日目。\n最初は、テクニカルな記事というより、\nこれまでのUSDについての概要（過去主要記事まとめ）や以降の記事の方針、\n個人的なUSDへの考え方についてを書いていこうと思います。\nまずはじめに USDがどんなものかは、以前書いた USDとはに書いてありますので詳細は省きますが、\nざっくりと書くとPixarが公開しているシーングラフを扱うオープンソースのライブラリです。\nこの記事を書いている段階で version 21.11 が、GithubのUSDリポジトリで公開されています。\n現在もライブラリ本体も常に進化を続け、さらに対応するツールもここ数年で大幅に増えてきており、\n世界的に見てもシーングラフを扱うライブラリとしては標準的なフォーマットになりつつあるのではないかと思います。\n勉強を始めた理由 そんな中、私が勉強を開始したのが2019年の夏頃です。\n自分自身が勉強を始めた理由はいろいろとありますが、\n2019年のSIGGRAPHに参加して、各種パイプラインのセッションで当たり前のように導入が語られていたことです。\nこれだけ語られるということは、\n近い将来どのソフトウェアにも導入され当たり前に扱われる未来が来るはずです。\nそれならば早いうちに勉強を開始するに越したことはないと思い、\n本腰をいれて勉強を開始しました。\nパイプラインまわりは、どこも手探りなところが多く問題を解決する手段を探している事が多いと思います。\nそんな中で、海外のすごいエンジニアやアーティストが、議論を重ね、実践を重ね、そして洗練してきたものであれば\n問題を解決するための答えが得られるのではないか？と、考えました。\n実際、USDは\n大規模なシーングラフを扱うことのできる強固なフォーマットであり、\nさらにはコンポジションアークを代表する多数のファイルをオーサリングのための機能や、\nファイルフォーマットプラグインのような、既存のデータを組み込んだり動的にシーングラフを構築する機能、\nカスタムスキーマのような、カスタマイズを可能にする各種API等々。\nさらに、USDを使う上で便利なプレビューツールであるusdview含めた実用的な各種ツールセット。\nそれらの多くが、パイプラインを作る上で非常に強力な機能を持っています。\nパイプラインツールとしてのUSD 最初に書いた通り、2021年現在DCCツールの対応がだいぶ進み、\n主要なツールでは USDのImport・Exportが可能になり\nHoudiniのSOLARISやBlenderUSDHydraAddon、Katana等を使用すればライティングやレンダリングが可能になりました。\nまた、OmniverseのようなUSDをベースにした強力な共同開発環境も登場しています。\nそれらのツールは非常に便利で、誰でもUSDを扱える環境ができつつあります。\nですが、それと同時に（それ以上に）個人的USDはパイプラインを構築するためのツールだと思うので、\nそのUSDの仕組みや、その構造、ライブラリの機能を利用してどのようにパイプラインを構築できるのか？\nといったことが、とても大切なのではないかと思います。\nアドカレ記事について というわけで、今回のアドカレを始めるにあたり\n自分の担当分をどういった内容をメインにするか考えていましたが、\nhttps://fereria.github.io/blog/posts/usdadventcalendar2021/\n事前の雑談Blogにも書きましたが、学習理由にもあるとおり以下のような方針でいきます。\n USDの機能や実装方法についてを書く（具体的な事例等は書かない） 過去記事・JupyterNotebookにだけ書いたような内容の記事化 DCCツールの使い方は書かない（Python C++ の実装側メイン） 自分の学習結果を書く  Houdiniに関しては、\nhttps://qiita.com/advent-calendar/2021/happrentice\nHoudini Apprentice ２日目に InlineUSDについて。\nhttps://qiita.com/advent-calendar/2021/houdini\nHoudini １２日目に、コンポーネントビルダーについてを投稿予定です。\nある程度事前に調査・テスト実装などはしていますが、\n特にC++絡みは自分も勉強しながらなのでミスやら勘違いはお許しください（突っ込まれたら直します）\nこれから１か月、どこまでいけるかわかりませんが最後までどうぞお付き合いください。\nよろしくお願いします。\n次は、HoudiniApprentice２日目で InlineUSDについて書きます。\nいつも参考にしているリンクなど 最後に、日ごろUSDを調べる＋今回のアドカレ記事を書くにあたり、\n参考にしているサイトや各種リンクをご紹介します。\n公式\n https://github.com/PixarAnimationStudios/USD https://graphics.pixar.com/usd/release/index.html https://graphics.pixar.com/usd/release/api/index.html  実装参考\n https://github.com/ColinKennedy/USD-Cookbook  USD関係スライド、記事\n https://www.slideshare.net/takahitotejima/usd-79288174 https://indyzone.co.jp/archives/1715  様々な対応ツール\n https://www.sidefx.com/ja/products/houdini/solaris/ https://github.com/Autodesk/maya-usd https://github.com/GPUOpen-LibrariesAndSDKs/BlenderUSDHydraAddon https://docs.blender.org/manual/en/latest/files/import_export/usd.html https://learn.foundry.com/nuke/content/comp_environment/3d_compositing/usd.html\nほかにもいろいろ。 https://www.nvidia.com/ja-jp/omniverse/  過去に自分で書いた記事やサンプルコード\n https://fereria.github.io/reincarnation_tech/11_Pipeline/ https://fereria.github.io/reincarnation_tech/60_JupyterNotebook/USD/APISchema/USDCollectoinSample/  ","ref":"/blog/posts/usd_advenct_calendar/"},{"title":"USDアドカレ対策","date":"","description":"","body":"Universal Scene Description Advenc Calendar 2021 という狂気のアドカレをやると宣言してしまったのでここ最近準備をしているわけですが、\nこのヤバい取り組みをどうやって乗り越えるかの作戦と基本方針について書いておこうと思います。\n埋めるのはヘルツさんと技師長師匠のお二人以外の20日分（＋Houdiniアドカレ１件）\n書くネタはそこそこあるので、埋められるとは思うものの、どういったこと書くといいのかは\n去年の年末ごろから実は考えていましたが、基本方針は以下のようにします。\n基本方針 まず、多くの人はUSDをつかってどのように運用したりパイプラインを構築したらいいのか\n知りたいという人もいるかと思いますが、そのあたりは基本書きません。\nというのも、パイプライン構築は会社の規模や分野（ゲーム、映像等々）によっても\n大きく異なるというのと\n私自身のポリシーとして、仕事にかかわるもの・仕事で得た運用ノウハウなどは\n一切書くつもりはないので　今回のアドカレでもそういう内容には触れません。\n投稿先 投稿先は、Zenn or Techページです（Techページのほうが多め）。\n予定構成 HoudiniアドカレでのComponentBuilder、３日目に技師長師匠のネタにのって Houdini InlineUSDあたりをやる予定ですが\nそれ以外は基本USDの技術 Python or C++ の実装、基本知識の解説を予定しています。\n基本説明含めて、Python比率多めです。\nというのを踏まえてやる内容は以下の通り。\n USDの基本説明  Attribute - Relation - Property PopulationMask AssetInfo Schema（IsA/Conclete/API/Multi-Applyed)   Python  コンポジションアーク SceneTraverse usdviewPlugin Tools  usdview usdresolve usdzip usdcat usdrecord usdchecker     C++  Pluginの作り方 AssetResolution FileFormatPlugin   Houdini  Inline USD ComponentBuilder   そのほか  USDを語る    以上。\n順番は気分次第で変わります。\nAssetResolverは、usdresolve usdzip を含めてかなり大きい内容なので\nこれだけで２～３記事消化予定。\n最近Resolver回りでずっと遊んでいたのですが、このあたりが個人的なUSDの強いところだと思ってるので\n今回のメインになるかなぁと思われます。\n基本部分やPythonは、NoteBookで書くだけかいたけど文章化してないものなんかを中心に書きます。\nToolsは、コマンドラインツールとしての使い方というよりはPythonでの実装回り。\n特に resolve や zip は、AssetResolverと大きく絡むので、2.0に切り替わったタイミングもあるので\nそちらの実装方法と合わせてまとめる予定。\n一応、テストコードの実装と今まで調べきれてなかったあたりの事前リサーチはしているのですが\nなかなか書き出してみるとやべー内容だなと思います。\nあと、今回は解説記事としてかくというより自分の勉強としての比重が大きいので\n特にC++が絡むものに関してはコード的にアレなところがあっても許してください。苦手なのです\u0026hellip;\nとりあえず完走できるようにがんばります。\n","ref":"/blog/posts/usdadventcalendar2021/"},{"title":"Blog始めます","date":"","description":"","body":"以前はWordpressを使用した旅行・プログラミング・CGなんでもOKなごちゃまぜBlogを運用していたのですが\nWordPressの運用がしんどいのと、調べたものを見直すにしても重すぎて使えん！！ということで\n閉鎖していました。\nなのですが、ぼちぼちコロナも落ち着いてきたし\n年末ごろに５月ごろに注文した車も納車されて、いろいろお出かけができるようになりそうなので\n趣味やら旅行やらをだらだらと書き続ける趣味な内容や、\nその週に書いたTechページまとめみたいなことをだらだら書き続けるBlogにしようと思います。\n現状はいくつかページがあるのですが、使い分けとして\nReincarnation+#Tech\nhttps://fereria.github.io/reincarnation_tech/\n調べた内容をまとめるWiki的なもの。\n調べて整理した情報をひたすら蓄積するための場所。\nカテゴリごとにページを作り、アップデートされたらページを編集する。\n自分の見直し用公開ノート\nZenn\nhttps://zenn.dev/remiria\n検証したりした内容を積んでいく場所。\n時系列を持つ技術記事を書く場所。\nReincarnation+#Techとの違いは、その時調べた状態はそのままに次は新しい記事として積んでいく点。\n技術専用Blogという扱い？\n技術記事は書かない。\n旅ログ、趣味ネタ（PC作ったとか、カメラ買ったとか、車関連とか）をつらつら書くところ。\nTechページの更新ログ\nこんな感じにしようと思います。\nそんなこんなでこのサイトもよろしくお願いします。\n","ref":"/blog/posts/sample/"},{"title":"About","date":"","description":"","body":"コロナ前までは、カメラ片手に新幹線と飛行機とレンタカーで日本全国を旅していた\nゲーム業界のどこかに生息するツールパイプラインプログラマ。\n今はロードバイクで近所をサイクリングしつつ、年末納車予定の車を相棒に\n旅行再開を心待ちにしていたり。\n技術記事関連\n https://fereria.github.io/reincarnation_tech https://zenn.dev/remiria  ","ref":"/blog/about/"},{"title":"Contact","date":"","description":"","body":"","ref":"/blog/contact/"}]